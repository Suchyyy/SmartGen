<metro:MetroWindow x:Class="SmartGen.MainWindow"
                   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:local="clr-namespace:SmartGen"
                   xmlns:types="clr-namespace:SmartGen.Types"
                   xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                   xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
                   xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
                   xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                   xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
                   TextElement.Foreground="{DynamicResource MaterialDesignBody}"
                   TextElement.FontWeight="Regular"
                   TextElement.FontSize="13"
                   TextOptions.TextRenderingMode="Auto"
                   TextOptions.TextFormattingMode="Ideal"
                   Background="{DynamicResource MaterialDesignPaper}"
                   FontFamily="{DynamicResource MaterialDesignFont}"
                   WindowTitleBrush="{StaticResource AccentColorBrush}" BorderThickness="1"
                   BorderBrush="{StaticResource AccentColorBrush}"
                   Height="600" Width="1024" ResizeMode="CanMinimize" WindowStartupLocation="CenterScreen"
                   d:DataContext="{d:DesignInstance}" x:Name="This">
    <metro:MetroWindow.Resources>
        <Style TargetType="{x:Type GroupBox}" BasedOn="{StaticResource MaterialDesignGroupBox}" />
        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignTextBox}" />
    </metro:MetroWindow.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <Grid Grid.Column="0">
            <Grid.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FF9B9B9B" Offset="1" />
                    <GradientStop Color="#FFEFEFEF" />
                </LinearGradientBrush>
            </Grid.Background>
            <Grid.RowDefinitions>
                <RowDefinition Height="100" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <Grid Background="{StaticResource AccentColorBrush}">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <materialDesign:PackIcon Kind="Molecule" HorizontalAlignment="Center" VerticalAlignment="Center"
                                             Foreground="#DDFFFFFF" FontSize="24" Height="30" Width="30"
                                             Margin="0,0,10,3" />
                    <TextBlock Text="SmartGen" HorizontalAlignment="Center" VerticalAlignment="Center"
                               Foreground="#DDFFFFFF" FontWeight="Bold" FontSize="28" />
                </StackPanel>
            </Grid>

            <StackPanel Grid.Row="1">
                <Button x:Name="ButtonTraining" Margin="10" Click="ButtonTraining_Click">
                    <Grid Width="150">
                        <materialDesign:PackIcon Kind="AlignVerticalBottom" />
                        <TextBlock HorizontalAlignment="Center" Text="Training" FontWeight="Bold" />
                    </Grid>
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignRaisedButton}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedIndex, ElementName=TabControl}" Value="0">
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="Foreground" Value="{StaticResource AccentColorBrush}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button x:Name="ButtonDataSet" Margin="10" Click="ButtonDataSet_Click">
                    <Grid Width="150">
                        <materialDesign:PackIcon Kind="Database" />
                        <TextBlock HorizontalAlignment="Center" Text="Data set" />
                    </Grid>
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignRaisedButton}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedIndex, ElementName=TabControl}" Value="1">
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="Foreground" Value="{StaticResource AccentColorBrush}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button x:Name="ButtonNeuralNetwork" Margin="10" Click="ButtonNeuralNetwork_Click">
                    <Grid Width="150">
                        <materialDesign:PackIcon Kind="Graph" />
                        <TextBlock HorizontalAlignment="Center" Text="Neural network" />
                    </Grid>
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignRaisedButton}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedIndex, ElementName=TabControl}" Value="2">
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="Foreground" Value="{StaticResource AccentColorBrush}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button x:Name="ButtonGeneticAlgorithm" Margin="10" Click="ButtonGeneticAlgorithm_Click">
                    <Grid Width="150">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="15*" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <materialDesign:PackIcon Kind="Dna" Grid.RowSpan="2" />
                        <TextBlock HorizontalAlignment="Center" Text=" Genetic Algorithm" Margin="14.946,0"
                                   Grid.Row="0" Grid.RowSpan="2" />
                    </Grid>
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignRaisedButton}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedIndex, ElementName=TabControl}" Value="3">
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="Foreground" Value="{StaticResource AccentColorBrush}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </StackPanel>
        </Grid>

        <Grid Grid.Column="1" Background="#FFCDCDCD">
            <TabControl Name="TabControl" Background="{x:Null}" BorderBrush="{x:Null}"
                        SelectionChanged="TabControl_OnSelectionChanged">
                <TabItem Name="TabTraining" Visibility="Collapsed">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="60" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <Rectangle Fill="White" Grid.Row="0" Margin="5" RadiusX="5" RadiusY="5" />
                        <Rectangle Fill="White" Grid.Row="1" Margin="5" RadiusX="5" RadiusY="5" />

                        <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="10">
                            <Button x:Name="ButtonStart" Margin="5, 0, 0, 0" Click="ButtonStartAlgorithm_Click"
                                    IsEnabled="False">
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                    <materialDesign:PackIcon Kind="Play" Margin="0, 0, 10, 0" />
                                    <TextBlock Text="Start" />
                                </StackPanel>
                            </Button>
                        </StackPanel>

                        <lvc:CartesianChart Grid.Row="1" Margin="10" LegendLocation="Top" x:Name="Chart">
                            <lvc:CartesianChart.AxisX>
                                <lvc:Axis Separator="{Binding Separator}" />
                            </lvc:CartesianChart.AxisX>
                            <lvc:CartesianChart.Series>
                                <lvc:LineSeries Values="{Binding AlgorithmMinValues}" Title="Min error" />
                                <lvc:LineSeries Values="{Binding AlgorithmMaxValues}" Title="Max error" />
                                <lvc:LineSeries Values="{Binding AlgorithmAvgValues}" Title="Average error" />
                            </lvc:CartesianChart.Series>
                        </lvc:CartesianChart>
                    </Grid>
                </TabItem>

                <TabItem Name="TabDataSet" Visibility="Collapsed">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="60" />
                            <RowDefinition Height="60" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <Rectangle Fill="White" Grid.Row="0" Margin="5" RadiusX="5" RadiusY="5" />
                        <Rectangle Fill="White" Grid.Row="1" Margin="5" RadiusX="5" RadiusY="5" />
                        <Rectangle Fill="White" Grid.Row="2" Margin="5" RadiusX="5" RadiusY="5" />

                        <StackPanel Grid.Row="0" Orientation="Horizontal">
                            <Button Margin="15,10,10,10" Click="ButtonLoadData_Click" Width="150">
                                <StackPanel Orientation="Horizontal">
                                    <materialDesign:PackIcon Kind="File" Margin="0, 0, 10, 0" />
                                    <TextBlock HorizontalAlignment="Center" Text="Load data" />
                                </StackPanel>
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}"
                                           BasedOn="{StaticResource MaterialDesignRaisedButton}">
                                        <Setter Property="IsEnabled" Value="True" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Text, ElementName=TextBoxColumnSeparator}"
                                                         Value="">
                                                <Setter Property="IsEnabled" Value="False" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>

                            <TextBlock Text="Lines to skip" Margin="10,10,-80,10" VerticalAlignment="Top" FontSize="10"
                                       Foreground="#FF707070" HorizontalAlignment="Center" Panel.ZIndex="1" />
                            <metro:NumericUpDown x:Name="UpDownLineSkip" Margin="10" Value="2" Minimum="1" Maximum="99"
                                                 FontSize="14" Width="70" TextAlignment="Center"
                                                 Style="{StaticResource MaterialDesignNumericUpDown}"
                                                 VerticalAlignment="Bottom" />

                            <TextBlock Text="Classes" Margin="10,10,-80,10" VerticalAlignment="Top" FontSize="10"
                                       Foreground="#FF707070" HorizontalAlignment="Center" Panel.ZIndex="1" />
                            <metro:NumericUpDown x:Name="UpDownClassCount" Margin="10" Value="1" Minimum="1"
                                                 Maximum="99" FontSize="14" Width="70" TextAlignment="Center"
                                                 Style="{StaticResource MaterialDesignNumericUpDown}"
                                                 VerticalAlignment="Bottom" />

                            <TextBox x:Name="TextBoxColumnSeparator" Margin="10" MaxLength="1" FontSize="14"
                                     TextAlignment="Center" Text="," materialDesign:HintAssist.Hint="Column separator"
                                     Style="{StaticResource MaterialDesignFloatingHintTextBox}" />

                            <TextBlock Text="Dot as decimal separator" Margin="10" VerticalAlignment="Center"
                                       FontFamily="14" />
                            <CheckBox x:Name="CheckBoxDecimalSeparator" IsChecked="true"
                                      Style="{StaticResource MaterialDesignSwitchToggleButton}" />
                        </StackPanel>

                        <StackPanel Grid.Row="1" Orientation="Horizontal">
                            <TextBlock Text="Ratio of training, test and validation sets" VerticalAlignment="Center"
                                       Margin="15,10,10,10" FontSize="14" />

                            <TextBlock Text="Training" Margin="10,10,-80,10" VerticalAlignment="Top" FontSize="10"
                                       Foreground="#FF707070" HorizontalAlignment="Center" Panel.ZIndex="1" />
                            <metro:NumericUpDown x:Name="UpDownTrainingSetRatio" Margin="10" Value="1" Minimum="1"
                                                 Maximum="10" FontSize="14" Width="70" TextAlignment="Center"
                                                 Style="{StaticResource MaterialDesignNumericUpDown}"
                                                 VerticalAlignment="Bottom" />

                            <TextBlock Text=":" VerticalAlignment="Center" FontSize="14" />

                            <TextBlock Text="Test" Margin="10,10,-80,10" VerticalAlignment="Top" FontSize="10"
                                       Foreground="#FF707070" HorizontalAlignment="Center" Panel.ZIndex="1" />
                            <metro:NumericUpDown x:Name="UpDownTestSetRatio" Margin="10" Value="1" Minimum="1"
                                                 Maximum="10" FontSize="14" Width="70" TextAlignment="Center"
                                                 Style="{StaticResource MaterialDesignNumericUpDown}"
                                                 VerticalAlignment="Bottom" />

                            <TextBlock Text=":" VerticalAlignment="Center" FontSize="14" />

                            <TextBlock Text="Validation" Margin="10,10,-80,10" VerticalAlignment="Top" FontSize="10"
                                       Foreground="#FF707070" HorizontalAlignment="Center" Panel.ZIndex="1" />
                            <metro:NumericUpDown x:Name="UpDownValidationSetRatio" Margin="10" Value="1" Minimum="0"
                                                 Maximum="10" FontSize="14" Width="70" TextAlignment="Center"
                                                 Style="{StaticResource MaterialDesignNumericUpDown}"
                                                 VerticalAlignment="Bottom" />
                        </StackPanel>

                        <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Right" Margin="10">
                            <Button Click="ButtonSaveDataSetParams_OnClick"
                                    Margin="0,0,10,0">
                                <StackPanel Orientation="Horizontal">
                                    <materialDesign:PackIcon Kind="ContentSave" Margin="0,0,5,0" />
                                    <TextBlock Text="Save" />
                                </StackPanel>
                            </Button>
                            <Button Click="ButtonRestoreDataSetParams_OnClick"
                                    Margin="0, 0, 5, 0">
                                <StackPanel Orientation="Horizontal">
                                    <materialDesign:PackIcon Kind="Restore" Margin="0,0,5,0" />
                                    <TextBlock Text="Restore" />
                                </StackPanel>
                            </Button>
                        </StackPanel>

                        <DataGrid x:Name="GridDataSet" Grid.Row="2" Margin="10" AutoGenerateColumns="False"
                                  local:DataGridHelper.TableData="{Binding DataSet}"
                                  EnableColumnVirtualization="True" EnableRowVirtualization="True"
                                  VirtualizingPanel.VirtualizationMode="Recycling" Background="White" />
                    </Grid>
                </TabItem>

                <TabItem Name="TabNeuralNetwork" Visibility="Collapsed">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <Rectangle Fill="White" Margin="5" RadiusX="5" RadiusY="5" />
                        <Rectangle Grid.Row="0" Grid.Column="1" Fill="White" Margin="5" RadiusX="5" RadiusY="5" />
                        <Rectangle Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Fill="White" Margin="5" RadiusX="5"
                                   RadiusY="5" />

                        <GroupBox Grid.Row="0" Grid.Column="0" Header="Structure" Margin="10" FontSize="14">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="110" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <TextBlock Text="Input layer size" VerticalAlignment="Center" />
                                <metro:NumericUpDown x:Name="UpDownInputLayerSize" TextAlignment="Center" Margin="10"
                                                     Minimum="1" Maximum="2000" Value="4" Grid.Column="1" Grid.Row="0"
                                                     Style="{StaticResource MaterialDesignNumericUpDown}" Width="80" />

                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Grid.Column="2"
                                            Grid.Row="0">
                                    <Button Height="20" Margin="10,10,5,10" Width="20"
                                            VerticalAlignment="Center" Click="ButtonAddHiddenLayer_OnClick">
                                        <Button.Style>
                                            <Style BasedOn="{StaticResource MaterialDesignFloatingActionButton}"
                                                   TargetType="{x:Type Button}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ElementName=This,Path=Layers.Count}"
                                                                 Value="6">
                                                        <Setter Property="IsEnabled" Value="False" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>

                                        <materialDesign:PackIcon Kind="Plus" />
                                    </Button>

                                    <Button Height="20" Margin="5,10,5,10" Width="20"
                                            Click="ButtonRemoveHiddenLayer_OnClick">
                                        <Button.Style>
                                            <Style BasedOn="{StaticResource MaterialDesignFloatingActionButton}"
                                                   TargetType="{x:Type Button}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ElementName=This,Path=Layers.Count}"
                                                                 Value="0">
                                                        <Setter Property="IsEnabled" Value="False" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>

                                        <materialDesign:PackIcon Kind="Minus" />
                                    </Button>
                                    <TextBlock Text="Hidden layers" Margin="5, 10, 10, 10"
                                               VerticalAlignment="Center" />
                                </StackPanel>

                                <ItemsControl ItemsSource="{Binding Layers, Mode=TwoWay}" Grid.ColumnSpan="3"
                                              Grid.Row="1" Grid.Column="0">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="110" />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <TextBlock
                                                    Text="{Binding LayerNo, StringFormat='Hidden layer {0}'}"
                                                    VerticalAlignment="Center" />
                                                <metro:NumericUpDown Minimum="1" Maximum="2000" Margin="10"
                                                                     Value="{Binding Size}" Grid.Column="1" Width="80"
                                                                     Style="{StaticResource MaterialDesignNumericUpDown}"
                                                                     TextAlignment="Center" />
                                            </Grid>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>

                                <TextBlock Text="Output layer size" VerticalAlignment="Center" Width="110"
                                           Grid.Column="0" Grid.Row="2" />
                                <metro:NumericUpDown x:Name="UpDownOutputLayerSize" Margin="10" TextAlignment="Center"
                                                     Grid.Row="2" Grid.Column="1" Minimum="1" Maximum="2000" Value="1"
                                                     Style="{StaticResource MaterialDesignNumericUpDown}" Width="80" />
                            </Grid>
                        </GroupBox>

                        <GroupBox Grid.Column="1" Grid.Row="0" Header="Parameter" Margin="10">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>


                                <TextBlock Text="Weight range" Margin="10" VerticalAlignment="Center" />
                                <TextBlock Grid.Row="0" Grid.Column="1" Margin="0" VerticalAlignment="Center"
                                           Foreground="#99000000" TextAlignment="Center" HorizontalAlignment="Left">
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0:F1} to {1:F1}">
                                            <Binding ElementName="RangeSliderWeight" Path="LowerValue" />
                                            <Binding ElementName="RangeSliderWeight" Path="UpperValue" />
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                                <metro:RangeSlider x:Name="RangeSliderWeight" Grid.Row="0" Grid.Column="1"
                                                   Minimum="-20" Maximum="20" IsMoveToPointEnabled="True"
                                                   LowerValue="-5" UpperValue="5" IsSnapToTickEnabled="True"
                                                   Style="{StaticResource MaterialDesignRangeSlider}"
                                                   MinRange="1" Margin="75,0,6,0" TickFrequency="0.5" />

                                <TextBlock Text="Bias" Margin="10" VerticalAlignment="Center" Grid.Column="0"
                                           Grid.Row="1" />
                                <metro:NumericUpDown x:Name="UpDownBias" Minimum="-5" Maximum="5" Interval="0.5"
                                                     Value="0" Grid.Column="1" Grid.Row="1" StringFormat="0.00"
                                                     TextAlignment="Center" Width="90" HorizontalAlignment="Left"
                                                     Style="{StaticResource MaterialDesignNumericUpDown}"
                                                     ValueChanged="UpDownBias_OnValueChanged" />

                                <ComboBox x:Name="ComboBoxActivationFunction" Grid.Row="2" Grid.Column="0" Width="150"
                                          materialDesign:HintAssist.Hint="Activation Function"
                                          Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                                          HorizontalAlignment="Left" Margin="10"
                                          SelectionChanged="ComboBoxActivationFunction_OnSelectionChanged"
                                          ItemsSource="{Binding Source={types:EnumBindingSource {x:Type types:ActivationFunctionType}}}"
                                          SelectedIndex="2" />

                                <TextBlock Grid.Row="2" Grid.Column="1" Text="t =" Margin="10"
                                           VerticalAlignment="Center">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="Visibility" Value="Hidden" />
                                            <Style.Triggers>
                                                <DataTrigger
                                                    Binding="{Binding SelectedItem, ElementName=ComboBoxActivationFunction}"
                                                    Value="{x:Static types:ActivationFunctionType.Sigmoid}">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                                <metro:NumericUpDown x:Name="UpDownT" Grid.Row="2" Grid.Column="1" Minimum="-5.0"
                                                     Maximum="5.0" Value="1" Margin="30,10,10,10" Width="75"
                                                     Interval="0.05" HorizontalAlignment="Left"
                                                     ValueChanged="UpDownBias_OnValueChanged">
                                    <metro:NumericUpDown.Style>
                                        <Style TargetType="{x:Type metro:NumericUpDown}"
                                               BasedOn="{StaticResource MaterialDesignNumericUpDown}">
                                            <Setter Property="Visibility" Value="Hidden" />
                                            <Style.Triggers>
                                                <DataTrigger
                                                    Binding="{Binding SelectedItem, ElementName=ComboBoxActivationFunction}"
                                                    Value="{x:Static types:ActivationFunctionType.Sigmoid}">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </metro:NumericUpDown.Style>
                                </metro:NumericUpDown>

                                <lvc:CartesianChart Grid.Row="3" Grid.ColumnSpan="2" Grid.Column="0" Margin="10"
                                                    DisableAnimations="True">
                                    <lvc:CartesianChart.Series>
                                        <lvc:LineSeries Foreground="{StaticResource AccentColorBrush}" Title="Value"
                                                        Values="{Binding ActivationFunctionChartValues}"
                                                        PointGeometrySize="0" />
                                    </lvc:CartesianChart.Series>
                                </lvc:CartesianChart>
                            </Grid>
                        </GroupBox>

                        <StackPanel Grid.Row="1" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right"
                                    Margin="10">
                            <Button Click="ButtonSaveNetworkParams_OnClick"
                                    Margin="0,0,10,0">
                                <StackPanel Orientation="Horizontal">
                                    <materialDesign:PackIcon Kind="ContentSave" Margin="0,0,5,0" />
                                    <TextBlock Text="Save" />
                                </StackPanel>
                            </Button>
                            <Button Click="ButtonRestoreNetworkParams_OnClick">
                                <StackPanel Orientation="Horizontal">
                                    <materialDesign:PackIcon Kind="Restore" Margin="0,0,5,0" />
                                    <TextBlock Text="Restore" />
                                </StackPanel>
                            </Button>
                        </StackPanel>
                    </Grid>
                </TabItem>

                <TabItem Name="TabGeneticAlgorithm" Visibility="Collapsed">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <Rectangle Grid.Row="0" Fill="White" Margin="5" RadiusX="5" RadiusY="5" />
                        <Rectangle Grid.Row="1" Fill="White" Margin="5" RadiusX="5" RadiusY="5" />
                        <Rectangle Grid.Row="2" Fill="White" Margin="5" RadiusX="5" RadiusY="5" />

                        <GroupBox Grid.Row="0" Header="Stopping criteria" Margin="10" FontSize="14">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Maximum number of generations" FontSize="14" Margin="0, 0, 10, 0"
                                           VerticalAlignment="Center" />
                                <metro:NumericUpDown x:Name="UpDownMaxIterations" Minimum="1" Maximum="99999"
                                                     Value="50" TextAlignment="Center" VerticalAlignment="Center"
                                                     Width="90" Interval="5" Margin="0"
                                                     Style="{StaticResource MaterialDesignNumericUpDown}" />

                                <Separator Width="20" Margin="10, 0, 10, 0" RenderTransformOrigin="0.5,0.5">
                                    <Separator.RenderTransform>
                                        <TransformGroup>
                                            <RotateTransform Angle="90" />
                                        </TransformGroup>
                                    </Separator.RenderTransform>
                                </Separator>

                                <TextBlock Text="Population size" FontSize="14" Margin="0, 0, 10, 0"
                                           VerticalAlignment="Center" />
                                <metro:NumericUpDown x:Name="UpDownPopulationSize" Minimum="10" Maximum="10000"
                                                     Value="100" TextAlignment="Center" VerticalAlignment="Center"
                                                     Width="90" Style="{StaticResource MaterialDesignNumericUpDown}"
                                                     Margin="0" Interval="10" />

                                <Separator Width="20" Margin="10, 0, 10, 0" RenderTransformOrigin="0.5,0.5">
                                    <Separator.RenderTransform>
                                        <TransformGroup>
                                            <RotateTransform Angle="90" />
                                        </TransformGroup>
                                    </Separator.RenderTransform>
                                </Separator>

                                <TextBlock Text="Error tolerance" FontSize="14" VerticalAlignment="Center"
                                           Margin="0, 0, 10, 0" />
                                <metro:NumericUpDown x:Name="UpDownErrorTolerance" Minimum="0.05" Maximum="100"
                                                     Value="5" Interval="0.05" TextAlignment="Center" Width="90"
                                                     Style="{StaticResource MaterialDesignNumericUpDown}"
                                                     VerticalAlignment="Center" Margin="0" StringFormat="0.00" />
                            </StackPanel>
                        </GroupBox>

                        <GroupBox Grid.Row="1" Header="Operators" Margin="10" FontSize="14">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="100" />
                                    <ColumnDefinition Width="170" />
                                    <ColumnDefinition Width="100" />
                                </Grid.ColumnDefinitions>

                                <ComboBox x:Name="ComboBoxSelection" materialDesign:HintAssist.Hint="Selection"
                                          Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                                          ItemsSource="{Binding Source={types:EnumBindingSource {x:Type types:SelectionType}}}" />
                                <TextBlock Grid.Row="0" Grid.Column="1" VerticalAlignment="Center"
                                           TextAlignment="Left" Margin="15,12,15,0">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}"
                                               BasedOn="{StaticResource MaterialDesignTextBlock}">
                                            <Style.Triggers>
                                                <DataTrigger Value="{x:Static types:SelectionType.Tournament}"
                                                             Binding="{Binding SelectedItem, ElementName=ComboBoxSelection}">
                                                    <Setter Property="Text" Value="Tournament size" />
                                                </DataTrigger>
                                                <DataTrigger Value="{x:Static types:SelectionType.Rank}"
                                                             Binding="{Binding SelectedItem, ElementName=ComboBoxSelection}">
                                                    <Setter Property="Text" Value="Rank size" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                                <metro:NumericUpDown x:Name="UpDownSelectionSize" Grid.Row="0" Grid.Column="2"
                                                     Minimum="1" Maximum="500" Value="10" Margin="0">
                                    <metro:NumericUpDown.Style>
                                        <Style TargetType="{x:Type metro:NumericUpDown}"
                                               BasedOn="{StaticResource MaterialDesignNumericUpDown}">
                                            <Setter Property="Visibility" Value="Visible" />
                                            <Style.Triggers>
                                                <DataTrigger Value="{x:Null}"
                                                             Binding="{Binding SelectedItem, ElementName=ComboBoxSelection}">
                                                    <Setter Property="Visibility" Value="Hidden" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </metro:NumericUpDown.Style>
                                </metro:NumericUpDown>

                                <ComboBox x:Name="ComboBoxCrossover" Grid.Row="1" Grid.Column="0"
                                          materialDesign:HintAssist.Hint="Crossover"
                                          Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                                          ItemsSource="{Binding Source={types:EnumBindingSource {x:Type types:CrossoverType}}}" />
                                <TextBlock Text="Crossover probability" Grid.Row="1" Grid.Column="1"
                                           VerticalAlignment="Center" TextAlignment="Left" Margin="15,12,15,0" />
                                <metro:NumericUpDown x:Name="UpDownCrossoverProbability" Grid.Row="1" Grid.Column="2"
                                                     Minimum="0" Maximum="1" Interval="0.05" Value="0.65"
                                                     Style="{StaticResource MaterialDesignNumericUpDown}"
                                                     StringFormat="0.00" />

                                <ComboBox x:Name="ComboBoxMutation" Grid.Row="2" Grid.Column="0"
                                          materialDesign:HintAssist.Hint="Mutation"
                                          Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                                          ItemsSource="{Binding Source={types:EnumBindingSource {x:Type types:MutationType}}}" />
                                <TextBlock Text="Mutation probability" Grid.Row="2" Grid.Column="1"
                                           VerticalAlignment="Center" TextAlignment="Left" Margin="15,12,15,0" />
                                <metro:NumericUpDown x:Name="UpDownMutationProbability" Grid.Row="2" Grid.Column="2"
                                                     Minimum="0" Maximum="1" Interval="0.05" Value="0.05"
                                                     Style="{StaticResource MaterialDesignNumericUpDown}"
                                                     StringFormat="0.00" />
                            </Grid>
                        </GroupBox>

                        <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right" Margin="10">
                            <Button Margin="0,0,10,0" Click="ButtonSaveGenParams_OnClick">
                                <StackPanel Orientation="Horizontal">
                                    <materialDesign:PackIcon Kind="ContentSave" Margin="0,0,5,0" />
                                    <TextBlock Text="Save" />
                                </StackPanel>
                            </Button>
                            <Button Click="ButtonRestoreGenParams_OnClick">
                                <StackPanel Orientation="Horizontal">
                                    <materialDesign:PackIcon Kind="Restore" Margin="0,0,5,0" />
                                    <TextBlock Text="Restore" />
                                </StackPanel>
                            </Button>
                        </StackPanel>
                    </Grid>
                </TabItem>
            </TabControl>
        </Grid>
    </Grid>
</metro:MetroWindow>